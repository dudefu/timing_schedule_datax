server.port=8088
##定时调度
##24 * 60 * 60 * 1000  每一天批量执行一次
oneDay=86400000
#0 * 1000  延迟0分钟开始执行
initDelay=0
jsonPath=E:/datax_json
dataxPath=E:/Project/DataX-import/target/datax-v1.0.3-hashdata/datax/bin/datax.py

##Oracle连接参数
msrv.primary.datasource.driverClassName=oracle.jdbc.OracleDriver
msrv.primary.datasource.url=jdbc:oracle:thin:@183.62.140.8:15221:nsqw
msrv.primary.datasource.username=XY_DATAVIEW
msrv.primary.datasource.password=XY_DATAVIEW01

##mysql连接参数
mysql.class.name=com.mysql.jdbc.Driver
mysql.url=jdbc:mysql://10.24.5.21:3306/xy_cloud_gp
mysql.username=root
mysql.password=xinyi2513

##gp连接参数
gp.class.name=org.postgresql.Driver
gp.url=jdbc:postgresql://10.24.5.35:5432/postgres
gp.username=gpadmin
gp.password=Xinyi2513

##datax读取插件reader
#mysqlreader
mysqlreader.name="mysqlreader"
#oraclereader
oraclereader.name="oraclereader"
#postgresqlreader
postgresqlreader.name="postgresqlreader"
#sqlserverreader
sqlserverreader.name="sqlserverreader"

##datax读取插件writer
#mysqlwriter
mysqlwriter.name="mysqlwriter"
#oraclewriter
oraclewriter.name="oraclewriter"
#gpwriter
gpwriter.name="gpdbwriter"
#sqlserverwriter
sqlserverwriter.name="sqlserverreader"

mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
mybatis.config-location=classpath:mybatis/config/mybatis-config.xml

spring.datasource.name=mysql_test
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#druid相关配置
#监控统计拦截的filters
spring.datasource.druid.filters=stat
spring.datasource.druid.driver-class-name=oracle.jdbc.OracleDriver
#基本属性
spring.datasource.druid.url=jdbc:oracle:thin:@183.62.140.8:15221:nsqw
spring.datasource.druid.username=XY_DATAVIEW
spring.datasource.druid.password=XY_DATAVIEW01
#配置初始化大小/最小/最大
spring.datasource.druid.initial-size=1
spring.datasource.druid.min-idle=1
spring.datasource.druid.max-active=20
#获取连接等待超时时间
spring.datasource.druid.max-wait=60000
#间隔多久进行一次检测，检测需要关闭的空闲连接
spring.datasource.druid.time-between-eviction-runs-millis=60000
#一个连接在池中最小生存的时间
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=SELECT * FROM DUAL
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
#打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
spring.datasource.druid.pool-prepared-statements=false
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20

